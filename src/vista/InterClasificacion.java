package vista;

import conexion.Conexion;
import controlador.Controlador_Clasificacion;
import java.sql.Connection;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JTable;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import modelo.Clasificacion;


public class InterClasificacion extends javax.swing.JInternalFrame {
    
    private int codClasificacion;

    public InterClasificacion() {
        initComponents();
        this.setSize(new Dimension(572, 474));
        this.setTitle("Clasificacion");
        this.CargarTablaClasificacion();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jButton_guardar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_clasificacion = new javax.swing.JTable();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Registrar Clasificaci√≥n");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nombre :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 170, -1));

        jButton_guardar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_guardar.setText("Guardar");
        jButton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 90, 30));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 130, 100));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_clasificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_clasificacion);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 350, 250));

        jLabel_wallpaper.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -40, 590, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarActionPerformed

        Clasificacion clasificacion = new Clasificacion();
        Controlador_Clasificacion controlClasificacion = new Controlador_Clasificacion();

        //validamos camoos vacios
        if (txt_nombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete  todos los campos");
        } else {
            if (!controlClasificacion.existeClasificacion(txt_nombre.getText().trim())) {
                clasificacion.setNombre(txt_nombre.getText().trim());
                if (controlClasificacion.guardar(clasificacion)) {
                    JOptionPane.showMessageDialog(null, "Registro Guardado");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Guardar");
                }
            } else {
                JOptionPane.showMessageDialog(null, "La Clasificacion ya esta registrada en la Base de Datos");
            }
        }
        //limpiar campo
        txt_nombre.setText("");
    }//GEN-LAST:event_jButton_guardarActionPerformed

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

        if (!txt_nombre.getText().isEmpty()) {
            Clasificacion clasificacion = new Clasificacion();
            Controlador_Clasificacion controlClasificacion = new Controlador_Clasificacion();

            clasificacion.setNombre(txt_nombre.getText().trim());
            if (controlClasificacion.actualizar(clasificacion, codClasificacion)) {
                JOptionPane.showMessageDialog(null, "Clasificacion Actulizada");
                txt_nombre.setText("");
                this.CargarTablaClasificacion();
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar Clasificacion");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una Clasificacion");
        }
        
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        if (!txt_nombre.getText().isEmpty()) {
            Clasificacion clasificacion = new Clasificacion();
            Controlador_Clasificacion controlClasificacion = new Controlador_Clasificacion();

            clasificacion.setNombre(txt_nombre.getText().trim());
            if (!controlClasificacion.eliminar(codClasificacion)) {
                JOptionPane.showMessageDialog(null, "Clasificacion Eliminada");
                txt_nombre.setText("");
                this.CargarTablaClasificacion();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Eliminar Clasificacion");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una Clasificacion");
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_clasificacion;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    private void CargarTablaClasificacion() {
        
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select CodClasificacion, Nombre from Clasificacion";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterClasificacion.jTable_clasificacion = new JTable(model);
            InterClasificacion.jScrollPane1.setViewportView(InterClasificacion.jTable_clasificacion);

            model.addColumn("N");
            model.addColumn("Nombre");

            while (rs.next()) {
                Object fila[] = new Object[2];
                for (int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Clasificacion: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_clasificacion.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_clasificacion.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    codClasificacion = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosClasificacionSeleccionada(codClasificacion);
                }
            }

            
        });
    }
    private void EnviarDatosClasificacionSeleccionada(int codClasificacion) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from Clasificacion where CodClasificacion = '" + codClasificacion + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_nombre.setText(rs.getString("Nombre"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar Clasificacion: " + e);
        }
    
    
    }
}
