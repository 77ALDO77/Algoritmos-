package vista;


import conexion.Conexion;
import controlador.Controlador_FichaMedica;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.FichaMedica;

public class InterFicha extends javax.swing.JInternalFrame {
    
    String ruta_archivo ="";
    int obtenerCodPacienteCombo = 0;


    public InterFicha() {
        initComponents();
        this.setSize(new Dimension(400, 300));
        this.setTitle("Ficha Medica");
        
        
        this.CargarComboPaciente();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_alergias = new javax.swing.JTextField();
        txt_fecha_visita = new com.toedter.calendar.JDateChooser();
        txt_tratamiento = new javax.swing.JTextField();
        jButton_Guardar = new javax.swing.JButton();
        Boton_pdf = new javax.swing.JButton();
        txt_diagnostico = new javax.swing.JTextField();
        jComboBox_paciente = new javax.swing.JComboBox<>();
        jLabel_wallpaper = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 255));
        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Ficha Médica");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Exámenes:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 90, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Alergias:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 90, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Fecha Visita:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 160, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("DNI");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Diagnostico");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Tratamiento:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 90, -1));

        txt_alergias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_alergias, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 170, -1));

        txt_fecha_visita.setDateFormatString("yyyy-MM-dd");
        txt_fecha_visita.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(txt_fecha_visita, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 170, -1));

        txt_tratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tratamientoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_tratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 170, -1));

        jButton_Guardar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_Guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_Guardar.setText("Guardar");
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 90, 30));

        Boton_pdf.setText("Seleccionar");
        Boton_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_pdfActionPerformed(evt);
            }
        });
        getContentPane().add(Boton_pdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 170, -1));

        txt_diagnostico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_diagnosticoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_diagnostico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 170, -1));

        jComboBox_paciente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar DNI:", "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox_paciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 170, -1));

        jLabel_wallpaper.setBackground(new java.awt.Color(153, 153, 255));
        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/fondo-diseño.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 410, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed

        FichaMedica fichaMedica = new FichaMedica();
    Controlador_FichaMedica controlFichaMedica = new Controlador_FichaMedica();

    String paciente = "";

    paciente = jComboBox_paciente.getSelectedItem().toString().trim();
    String ruta_archivo = "";

    //validar campos
    if (txt_alergias.getText().equals("") || txt_fecha_visita.getDate() == null || txt_diagnostico.getText().equals("") || txt_tratamiento.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Complete todos los campos");
        txt_alergias.setBackground(Color.red);
        txt_fecha_visita.setBackground(Color.red);
        txt_diagnostico.setBackground(Color.red);
        txt_tratamiento.setBackground(Color.red);

    } else {
        //consulta para ver si el empleado ya existe
        if (!controlFichaMedica.existeFichaMedica(paciente)) {
            if (paciente.equalsIgnoreCase("Seleccione DNI:")) {
                JOptionPane.showMessageDialog(null, "Seleccione DNI");
            } else {
                try {
                    fichaMedica.setAlergias(txt_alergias.getText().trim());
                    fichaMedica.setFecha_visita(txt_fecha_visita.getDate());
                    fichaMedica.setDiagnostico(txt_diagnostico.getText().trim());
                    fichaMedica.setTratamiento(txt_tratamiento.getText().trim());

                    // Id de la especialidad
                    this.CodPaciente();
                    fichaMedica.setCodPaciente(obtenerCodPacienteCombo);

                    // Show a file chooser dialog to select the PDF file
                    JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setDialogTitle("Seleccionar Archivo PDF");
                    fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos PDF (*.pdf)", "pdf"));
                    int userSelection = fileChooser.showOpenDialog(null);

                    if (userSelection == JFileChooser.APPROVE_OPTION) {
                        File selectedFile = fileChooser.getSelectedFile();
                        String filePath = selectedFile.getAbsolutePath();

                        // Save the PDF file
                        fichaMedica.setRutaArchivoPDF(filePath);

                        if (controlFichaMedica.guardar(fichaMedica)) {
                            JOptionPane.showMessageDialog(null, "Registro y PDF Guardados");
                            txt_alergias.setBackground(Color.green);
                            txt_fecha_visita.setBackground(Color.green);
                            txt_diagnostico.setBackground(Color.green);
                            txt_tratamiento.setBackground(Color.green);

                            this.CargarComboPaciente();
                            this.Limpiar();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al Guardar");
                        }
                    }

                } catch (HeadlessException | NumberFormatException e) {
                    System.out.println("Error en: " + e);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "El empleado ya existe en la Base de Datos");
        }
    }
        
    }//GEN-LAST:event_jButton_GuardarActionPerformed

    private void txt_tratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tratamientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tratamientoActionPerformed

    private void txt_diagnosticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_diagnosticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diagnosticoActionPerformed

    private void Boton_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_pdfActionPerformed
      
    }//GEN-LAST:event_Boton_pdfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_pdf;
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JComboBox<String> jComboBox_paciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txt_alergias;
    private javax.swing.JTextField txt_diagnostico;
    private com.toedter.calendar.JDateChooser txt_fecha_visita;
    private javax.swing.JTextField txt_tratamiento;
    // End of variables declaration//GEN-END:variables
     /**
     *
     * Metodo para limpiar campos
     */
    private void Limpiar() {
        Boton_pdf.setSelected(false);
        txt_alergias.setText("");
        txt_fecha_visita.setDate(null);
        jComboBox_paciente.setSelectedItem("Seleccione DNI:");
        txt_diagnostico.setText("");
        txt_tratamiento.setText("");
        

    }

    private void CargarComboPaciente() {
        
        Connection cn = Conexion.conectar();
        String sql = "select DNI from Paciente";
        Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_paciente.removeAllItems();
            jComboBox_paciente.addItem("Seleccione DNI:");
            while (rs.next()) {
                jComboBox_paciente.addItem(rs.getString("DNI"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar pacientes");
        }
        
    }

    private int CodPaciente() {
        String sql = "select * from Paciente where DNI = '" + this.jComboBox_paciente.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerCodPacienteCombo = rs.getInt("CodPaciente");
            }
        } catch (SQLException e) {
            System.out.println("Error al obener Cod Paciente");
        }
        return obtenerCodPacienteCombo;
        
    }
    
    private void seleccionar_pdf(){                                          
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter fi = new FileNameExtensionFilter("pdf", "pdf");
        j.setFileFilter(fi);
        int se = j.showOpenDialog(this);
        if (se == 0){
            this.Boton_pdf.setText("" + j.getSelectedFile().getName());
            ruta_archivo = j.getSelectedFile().getAbsolutePath();
        } else {
        }
    }    

}