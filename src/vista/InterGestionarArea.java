package vista;

import conexion.Conexion;
import controlador.Controlador_Area;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Area;

public class InterGestionarArea extends javax.swing.JInternalFrame {

    private int codArea;

    public InterGestionarArea() {
        initComponents();
        this.setSize(new Dimension(600, 500));
        this.setTitle("Gestionar Área");
        //Cargar tabla
        this.CargarTablaAreas();

        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_areas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jButton_buscar = new javax.swing.JButton();
        txt_codBuscado = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Administrar Área");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_areas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_areas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 420, 250));

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 130, 250));

        jPanel3.setBackground(new java.awt.Color(255, 204, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 310, 30));

        jButton_buscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_buscar.setText("Buscar");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
        jPanel3.add(txt_codBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 130, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 570, 130));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

        Area area = new Area();
        Controlador_Area controlArea = new Controlador_Area();

        //validar campos
        if (txt_nombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            try {
                area.setNombre(txt_nombre.getText().trim());

                if (controlArea.actualizar(area, codArea)) {
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    this.CargarTablaAreas();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Actualizar");
                }
            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }
        }

    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Seguro que desea eliminar ésta área?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            Controlador_Area controlArea = new Controlador_Area();

            if (controlArea.eliminar(codArea)) {
                JOptionPane.showMessageDialog(null, "Área eliminada exitosamente");
                this.CargarTablaAreas();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar la área");
            }
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        String codBuscado = txt_codBuscado.getText().trim();

        if (!codBuscado.isEmpty()) {
            buscarPorCodigo(codBuscado);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un número de código válido para buscar.");
        }
    }//GEN-LAST:event_jButton_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_areas;
    private javax.swing.JTextField txt_codBuscado;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    private void Limpiar() {
        txt_nombre.setText("");
    }

    private void CargarTablaAreas() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select CodArea, Nombre from areaatencion";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarArea.jTable_areas = new JTable(model);
            InterGestionarArea.jScrollPane1.setViewportView(InterGestionarArea.jTable_areas);

            model.addColumn("N°");
            model.addColumn("Nombre de área");

            while (rs.next()) {
                Object fila[] = new Object[2];
                for (int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }

                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Áreas: " + e);
        }

        jTable_areas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_areas.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    codArea = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosAreaSeleccionada(codArea);
                }
            }

        });
    }

    private void EnviarDatosAreaSeleccionada(int codArea) {

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select * from areaatencion where CodArea ='" + codArea + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_nombre.setText(rs.getString("Nombres"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar área: " + e);
        }
    }

    private void buscarPorCodigo(String codBuscado) {
        if (!codBuscado.isEmpty()) {

            try {
                int cod = Integer.parseInt(codBuscado);
                Controlador_Area controlArea = new Controlador_Area();
                Area area = controlArea.BuscarPorCodArea(cod);

                if (area != null) {
                    txt_nombre.setText(area.getNombre());
                    codArea = area.getCodArea();
                } else {
                    JOptionPane.showMessageDialog(null, "Área no encontrada para el código ingresado.");
                }
            } catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Ingrese un número de código válido para buscar.");
            }
        } else {
             JOptionPane.showMessageDialog(null, "Ingrese un número de código válido para buscar.");
        }
    }
}
