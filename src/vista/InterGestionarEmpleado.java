package vista;


import conexion.Conexion;
import controlador.Controlador_Empleado;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import modelo.Empleado;



public class InterGestionarEmpleado extends javax.swing.JInternalFrame {
    
    private int codEmpleado;
    int obtenerCodEspecialidadCombo = 0; 


    public InterGestionarEmpleado() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Empleados");
        // Cargar tabla
        this.CargarTablaEmpleados();
        this.CargarComboEspecialidad();


        //insertar imagen en nuestro JLabel

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_empleados = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        txt_celular = new javax.swing.JTextField();
        jComboBox_especialidad = new javax.swing.JComboBox<>();
        txt_dni = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_correo = new javax.swing.JTextField();
        jButton_buscar = new javax.swing.JButton();
        txt_dniBuscado = new javax.swing.JTextField();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Gestionar Empleados");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_empleados);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 90, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Apellido:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 90, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("DNI:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Celular:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 90, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Especialidad:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 90, -1));
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 170, -1));

        txt_apellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 170, -1));

        txt_celular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 170, -1));

        jComboBox_especialidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_especialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Especialidad:", "item1", "item2", "item3", "item4" }));
        jComboBox_especialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_especialidadActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox_especialidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 90, 170, -1));

        txt_dni.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_dni, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 170, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Correo:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 90, -1));

        txt_correo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 170, -1));

        jButton_buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_buscar.setText("Buscar");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        txt_dniBuscado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dniBuscadoActionPerformed(evt);
            }
        });
        jPanel3.add(txt_dniBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 300, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 130));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 900, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

            Empleado empleado = new Empleado();
            Controlador_Empleado controlEmpleado = new Controlador_Empleado();
            String especialidad = "";
            especialidad = jComboBox_especialidad.getSelectedItem().toString().trim();
            
            // Validar campos
            if (txt_nombre.getText().isEmpty() || txt_apellido.getText().isEmpty() || txt_dni.getText().isEmpty() || txt_correo.getText().isEmpty() || txt_celular.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            } else {
              if (especialidad.equalsIgnoreCase("Seleccione especialidad:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione especialidad");
             } else {
                try {
                empleado.setNombre(txt_nombre.getText().trim());
                empleado.setApellido(txt_apellido.getText().trim());
                empleado.setDni(Integer.parseInt(txt_dni.getText().trim()));
                empleado.setCorreo(txt_correo.getText().trim());
                empleado.setCelular(Integer.parseInt(txt_celular.getText().trim()));
                
                this.CodEspecialidad ();
                empleado.setCodEspecialidad(obtenerCodEspecialidadCombo);

                if (controlEmpleado.actualizar(empleado, codEmpleado)) {
                    JOptionPane.showMessageDialog(null, "Registro Actualizado");
                    this.CargarTablaEmpleados();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Actualizar");
                }
            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error en: " + e);
            }
        }
    }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        Controlador_Empleado controlEmpleado = new Controlador_Empleado();
        if (codEmpleado == 0) {
            JOptionPane.showMessageDialog(null, "¡Seleccione Empleado!");
        } else {
            if (!controlEmpleado.eliminar(codEmpleado)) {
                JOptionPane.showMessageDialog(null, "¡Empleado Eliminado!");
                this.CargarTablaEmpleados();
                this.CargarComboEspecialidad();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "¡Error al eliminar Empleado!");
            }
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jComboBox_especialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_especialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_especialidadActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        String dniBuscado = txt_dniBuscado.getText().trim();

    if (!dniBuscado.isEmpty()) {
        
        buscarEmpleadosPorDNI(dniBuscado);
    } else {
        JOptionPane.showMessageDialog(null, "Ingrese un número de DNI válido para buscar.");
    }
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void txt_dniBuscadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dniBuscadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dniBuscadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JComboBox<String> jComboBox_especialidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_empleados;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_celular;
    private javax.swing.JTextField txt_correo;
    private javax.swing.JTextField txt_dni;
    private javax.swing.JTextField txt_dniBuscado;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    
      private void Limpiar() {
        txt_nombre.setText("");
        txt_apellido.setText("");
        txt_dni.setText("");
        txt_correo.setText("");
        txt_celular.setText("");
        jComboBox_especialidad.setSelectedIndex(0);
    }

    private void CargarComboEspecialidad() {
    try (Connection cn = Conexion.conectar();
         Statement st = cn.createStatement()) {

        String sql = "SELECT * FROM Especialidad";
        ResultSet rs = st.executeQuery(sql);

        jComboBox_especialidad.removeAllItems();
        jComboBox_especialidad.addItem("Seleccione especialidad:");

        while (rs.next()) {
            jComboBox_especialidad.addItem(rs.getString("Nombre"));
        }
        } catch (SQLException e) {
            System.err.println("Error al cargar especialidad: " + e);
        }
    }


    private void CargarTablaEmpleados() {
    try (Connection cn = Conexion.conectar();
         Statement st = cn.createStatement()) {

        DefaultTableModel model = new DefaultTableModel();
        String sql = "SELECT e.CodEmpleado, e.Nombre, e.Apellido, e.DNI, e.Correo, e.Celular, es.Nombre AS Especialidad "
                + "FROM Empleado AS e "
                + "INNER JOIN Especialidad AS es ON e.CodEspecialidad = es.CodEspecialidad";
        ResultSet rs = st.executeQuery(sql);

        jTable_empleados.setModel(model);
        model.addColumn("N°");//COD
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("DNI");
        model.addColumn("Correo");
        model.addColumn("Celular");
        model.addColumn("Especialidad");

        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getInt("CodEmpleado"),
                rs.getString("Nombre"),
                rs.getString("Apellido"),
                rs.getString("DNI"),
                rs.getString("Correo"),
                rs.getString("Celular"),
                rs.getString("Especialidad")
            });
        }

        // Evento para obtener el empleado al que el usuario da clic
        jTable_empleados.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_empleados.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    int codEmpleado = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosEmpleadoSeleccionado(codEmpleado);
                }
            }
        });
    } catch (SQLException e) {
        System.err.println("Error al llenar la tabla de empleados: " + e);
    }
}


private void EnviarDatosEmpleadoSeleccionado(int codEmpleado) {
    try (Connection cn = Conexion.conectar();
         PreparedStatement pst = cn.prepareStatement("SELECT * FROM Empleado WHERE CodEmpleado = ?")) {
        pst.setInt(1, codEmpleado);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            txt_nombre.setText(rs.getString("Nombre"));
            txt_apellido.setText(rs.getString("Apellido"));
            txt_correo.setText(rs.getString("Correo"));
            int celular = rs.getInt("Celular");
            int codEspecialidad = rs.getInt("CodEspecialidad");
            jComboBox_especialidad.setSelectedItem(relacionarEspecialidad(codEspecialidad));
        }
    } catch (SQLException e) {
        System.err.println("Error al seleccionar Empleado: " + e);
    }
}

private String relacionarEspecialidad(int codEspecialidad) {
    String nombreEspecialidad = "";
    try (Connection cn = Conexion.conectar();
         PreparedStatement pst = cn.prepareStatement("SELECT Nombre FROM Especialidad WHERE CodEspecialidad = ?")) {
        pst.setInt(1, codEspecialidad);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            nombreEspecialidad = rs.getString("Nombre");
        }
    } catch (SQLException e) {
        System.err.println("Error al obtener el Cod de la Especialidad: " + e);
    }
    return nombreEspecialidad;
}
      

    private int CodEspecialidad() {
        String sql = "select * from Especialidad where Nombre = '" + this.jComboBox_especialidad.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerCodEspecialidadCombo = rs.getInt("CodEspecialidad");
            }
        } catch (SQLException e) {
            System.out.println("Error al obener Cod Especialidad");
        }
        return obtenerCodEspecialidadCombo;
    }


    private void buscarEmpleadosPorDNI(String dniBuscado) {
    if (!dniBuscado.isEmpty()) {
        try {
            int dni = Integer.parseInt(dniBuscado);
            Controlador_Empleado controlEmpleado = new Controlador_Empleado();
            Empleado empleado = controlEmpleado.buscarPorDNI(dni);

            if (empleado != null) {
                txt_nombre.setText(empleado.getNombre());
                txt_apellido.setText(empleado.getApellido());
                txt_dni.setText(String.valueOf(empleado.getDni()));
                txt_correo.setText(empleado.getCorreo());
                txt_celular.setText(String.valueOf(empleado.getCelular()));
                codEmpleado = empleado.getCodEmpleado();
            } else {
                JOptionPane.showMessageDialog(null, "Empleado no encontrado para el DNI ingresado.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un número de DNI válido para buscar.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Ingrese un número de DNI válido para buscar.");
    }
}
    
}