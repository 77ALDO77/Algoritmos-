package vista;

import conexion.Conexion;
import controlador.Controlador_Paciente;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Paciente;

public class InterGestionarPaciente extends javax.swing.JInternalFrame {

    private int codPaciente;

    public InterGestionarPaciente() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Paciente");
        //Cargar tabla
        this.CargarTablaPacientes();
        this.CargarComboSexo();
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_pacientes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_apellido = new javax.swing.JTextField();
        txt_celular = new javax.swing.JTextField();
        txt_dni = new javax.swing.JTextField();
        jComboBox_sexo = new javax.swing.JComboBox<>();
        jButton_buscar = new javax.swing.JButton();
        txt_dniBuscado = new javax.swing.JTextField();
        jDateChooser_fecha_nacimiento = new com.toedter.calendar.JDateChooser();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Gestionar Pacientes");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_pacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_pacientes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nombre:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 90, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Apellido:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 90, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Fecha de N.:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 90, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("DNI:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 90, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Celular:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 90, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Sexo:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 90, -1));

        txt_apellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 170, -1));

        txt_celular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 170, -1));

        txt_dni.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_dni, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 170, -1));

        jComboBox_sexo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione GÃ©nero:", "F", "M" }));
        jComboBox_sexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_sexoActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox_sexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 170, -1));

        jButton_buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_buscar.setText("Buscar");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        txt_dniBuscado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dniBuscadoActionPerformed(evt);
            }
        });
        jPanel3.add(txt_dniBuscado, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 300, -1));

        jDateChooser_fecha_nacimiento.setDateFormatString("yyyy-MM-dd");
        jDateChooser_fecha_nacimiento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel3.add(jDateChooser_fecha_nacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 170, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 870, 120));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 900, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

        Paciente paciente = new Paciente();
        Controlador_Paciente controlPaciente = new Controlador_Paciente();
        String sexo = jComboBox_sexo.getSelectedItem().toString().trim();

        // Validar campos
        if (txt_nombre.getText().isEmpty() || txt_apellido.getText().isEmpty() || jDateChooser_fecha_nacimiento.getDate() == null || txt_dni.getText().isEmpty() || txt_celular.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
        } else {
            if (sexo.equalsIgnoreCase("Seleccione sexo:")) {
                JOptionPane.showMessageDialog(null, "Seleccione sexo");
            } else {
                try {
                    paciente.setNombre(txt_nombre.getText().trim());
                    paciente.setApellido(txt_apellido.getText().trim());
                    paciente.setFecha_nacimiento(jDateChooser_fecha_nacimiento.getDate());
                    paciente.setDni(Integer.parseInt(txt_dni.getText().trim()));
                    paciente.setCelular(Integer.parseInt(txt_celular.getText().trim()));
                    paciente.setSexo(sexo); // AquÃ­ se establece el sexo

                    if (controlPaciente.actualizar(paciente, codPaciente)) {
                        JOptionPane.showMessageDialog(null, "Registro Actualizado");
                        this.CargarTablaPacientes();
                        this.Limpiar();
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al Actualizar");
                    }
                } catch (HeadlessException | NumberFormatException e) {
                    System.out.println("Error en: " + e);
                }
            }
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        Controlador_Paciente controlPaciente = new Controlador_Paciente();

        int confirmacion = JOptionPane.showConfirmDialog(null, "Â¿Seguro que desea eliminar este paciente?", "Confirmar EliminaciÃ³n", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            if (codPaciente > 0) { // AsegÃºrate de que codPaciente sea vÃ¡lido
                if (controlPaciente.eliminar(codPaciente)) {
                    JOptionPane.showMessageDialog(null, "Paciente eliminado exitosamente");
                    this.CargarTablaPacientes();
                    this.Limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el Paciente");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un paciente antes de eliminarlo");
            }
        }

    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jComboBox_sexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_sexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_sexoActionPerformed

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        // Obtener el valor del campo de texto del DNI
        String dniBuscado = txt_dniBuscado.getText().trim();

        if (!dniBuscado.isEmpty()) {
            // Llamar a un mÃ©todo que busca al paciente por su DNI
            buscarPorDNI(dniBuscado);
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero de DNI vÃ¡lido para buscar.");
        }


    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void txt_dniBuscadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dniBuscadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dniBuscadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JComboBox<String> jComboBox_sexo;
    private com.toedter.calendar.JDateChooser jDateChooser_fecha_nacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_pacientes;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_celular;
    private javax.swing.JTextField txt_dni;
    private javax.swing.JTextField txt_dniBuscado;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables

    /*
     * *****************************************************
     * metodo para limpiar
     * *****************************************************
     */
    private void Limpiar() {
        txt_nombre.setText("");
        txt_apellido.setText("");
        jDateChooser_fecha_nacimiento.setDate(null);
        txt_dni.setText("");
        txt_celular.setText("");
        jComboBox_sexo.setSelectedItem("Seleccione sexo:");
    }

    private void CargarTablaPacientes() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select CodPaciente, Nombres, Apellidos, FechaNacimiento, DNI, Celular, Sexo from Paciente";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarPaciente.jTable_pacientes = new JTable(model);
            InterGestionarPaciente.jScrollPane1.setViewportView(InterGestionarPaciente.jTable_pacientes);

            model.addColumn("NÂ°");//ID
            model.addColumn("Nombres");
            model.addColumn("Apellidos");
            model.addColumn("Fecha Nacimiento");
            model.addColumn("DNI");
            model.addColumn("Celular");
            model.addColumn("Sexo");

            while (rs.next()) {
                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla Pacientes: " + e);
        }

        // Evento para obtener el campo al que el usuario dio clic
        jTable_pacientes.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_pacientes.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    codPaciente = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosPacienteSeleccionado(codPaciente); // MÃ©todo para mostrar informaciÃ³n
                }
            }
        });
    }

    private void EnviarDatosPacienteSeleccionado(int codPaciente) {

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from Paciente where CodPaciente = '" + codPaciente + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_nombre.setText(rs.getString("Nombres"));
                txt_apellido.setText(rs.getString("Apellidos"));
                jDateChooser_fecha_nacimiento.setDate(rs.getDate("Fecha Nacimiento"));
                int dni = (rs.getInt("DNI"));
                int celular = rs.getInt("Celular");
                jComboBox_sexo.setSelectedItem(rs.getString("Sexo"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar paciente: " + e);
        }

    }

    private void CargarComboSexo() {
        jComboBox_sexo.removeAllItems();
        jComboBox_sexo.addItem("Seleccione GÃ©nero:");
        jComboBox_sexo.addItem("F");
        jComboBox_sexo.addItem("M");

    }

    private void buscarPorDNI(String dniBuscado) {
        if (!dniBuscado.isEmpty()) {
            try {
                int dni = Integer.parseInt(dniBuscado);
                Controlador_Paciente controlPaciente = new Controlador_Paciente();
                Paciente paciente = controlPaciente.buscarPorDNI(dni);

                if (paciente != null) {
                    txt_nombre.setText(paciente.getNombre());
                    txt_apellido.setText(paciente.getApellido());
                    jDateChooser_fecha_nacimiento.setDate(paciente.getFecha_nacimiento());
                    txt_dni.setText(String.valueOf(paciente.getDni()));
                    txt_celular.setText(String.valueOf(paciente.getCelular()));
                    jComboBox_sexo.setSelectedItem(paciente.getSexo());
                    codPaciente = paciente.getCodPaciente();
                } else {
                    JOptionPane.showMessageDialog(null, "Paciente no encontrado para el DNI ingresado.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero de DNI vÃ¡lido para buscar.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un nÃºmero de DNI vÃ¡lido para buscar.");
        }
    }

}
